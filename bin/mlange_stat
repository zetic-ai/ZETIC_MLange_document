#!/usr/bin/env python3
import argparse
import urllib.request
import urllib.error
import urllib.parse
import json

def check_model_available(model_key):
    url = f'https://aws.zeticai.com/model/ztc/{model_key}/status'
    
    request = urllib.request.Request(url, headers={'Authorization': ''})
    try:
        response = urllib.request.urlopen(request)
        if response.code == 200:
            body = json.loads(response.read().decode('utf-8'))
            count = int(body['count'])
            status = body['status']
            print_information(model_key, status, count)
        else:
            print(f'MLange Model : {model_key} is not available.')
    except urllib.error.HTTPError as e:
        print(f'[ERROR] MLange Model Server is not available.')

def print_information(model_key, status, count):
    print(f'MLange Model : {model_key} is on {status}.')
    if count <= 0:
        print(f'MLange Model : {model_key} download limit exceeded.')
        print('Please contact us. https://zetic.ai/contact-sales')
    if status == 'CONVERTING':
        print('Your model is converting to target libraries.')
        print('It takes about 5 ~ 10 minutes.')
    elif status == 'BENCHMARKING':
        print('Converted target libraries will be benchmarked on a pool of real devices.')
        print('It takes about 20 ~ 30 minutes.')
    elif status == 'AVAILABLE':
        print('ZETIC.ai Model is ready and available to use.')
        print('Refer to the documentation to get started. https://docs.zetic.ai/')
        print(f'You have {count} downloads left.')
    elif status == 'FAILED':
        print('Model profiling has failed. Please Contact us. https://zetic.ai/contact-sales')

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='ZETIC.MLange Stat: On-device Model status')
    parser.add_argument('-k', help='MLange Model key to check status')
    
    args = parser.parse_args()
    
    print('[ZETIC.MLange Model Status Checker]')
    
    if args.k:
        print(f'Request current status of model {args.k}...')
        print()
        check_model_available(args.k)
    else:
        print('Argument not valid.')
